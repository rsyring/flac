[tox]
envlist = {{cookiecutter.python_tox}}-{frozen,current},pre-commit,safety

[testenv]
# Pass through some environment variables
passenv = CI

setenv =
    {{cookiecutter.project_pymod|upper}}_SYSLOG_DISABLE = 1

# Ignore all "not installed in testenv" warnings.
# allowlist_externals = env

# pip is used below to install the app
skip_install = true

commands =
    frozen: python requirements/bootstrap.py
    frozen: invoke reqs-sync --no-compile --sync-fname common.txt
    current: pip --quiet install -r requirements/common.in

    # You can't specify this in requirements.in b/c the file reference in requirements.txt becomes
    # an absolute path (which would break on CI and other dev's machines)
    current: pip --quiet install -e .

    {{ cookiecutter.project_cli_bin }} db init --for-tests

    # Run the primary tests for tests environment
    py.test \
        # Use our pytest.ini for warning management
        -c .ci/pytest.ini \
        -ra \
        --tb native \
        --strict-markers \
        --cov {{cookiecutter.project_pymod}} \
        --cov-config .coveragerc \
        --cov-report xml \
        --no-cov-on-fail \
        --junit-xml={toxinidir}/.ci/test-reports/{envname}.pytests.xml \
        {{cookiecutter.project_pymod}}

    # Make sure alembic migrations only have one head.
    python scripts/count-heads.py


[testenv:pre-commit]
basepython = {{cookiecutter.python_tox}}
skip_install = true
usedevelop = false
deps =
    pre-commit
commands =
    pre-commit run --all-files --show-diff-on-failure -v


[testenv:audit]
basepython = {{cookiecutter.python_tox}}
skip_install = true
usedevelop = false
deps =
    pip-audit
allowlist_externals =
    invoke
    pip-audit
commands =
    # pip-audit is more efficient operating from the current environment
    invoke reqs-sync --no-compile --sync-fname dev.txt
    pip-audit
